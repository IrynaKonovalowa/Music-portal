<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Access" xml:space="preserve">
    <value>Доступ</value>
  </data>
  <data name="AddGenre" xml:space="preserve">
    <value>Додати Жанр</value>
  </data>
  <data name="AddSinger" xml:space="preserve">
    <value>Додати Виконавця</value>
  </data>
  <data name="AddSong" xml:space="preserve">
    <value>Додати Пісню</value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>Авторизація</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Повернутися до списку</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Вибрати мову</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Видалити</value>
  </data>
  <data name="DeleteConfirm" xml:space="preserve">
    <value>Ви впевнені, що хочете видалити цю пісню?</value>
  </data>
  <data name="DeleteGenre" xml:space="preserve">
    <value>Видалити Жанр</value>
  </data>
  <data name="DeleteGenreConfirm" xml:space="preserve">
    <value>Ви впевнені, що хочете видалити цей жанр?</value>
  </data>
  <data name="DeleteSinger" xml:space="preserve">
    <value>Видалити Виконавця</value>
  </data>
  <data name="DeleteSingerConfirm" xml:space="preserve">
    <value>Ви впевнені, що хочете видалити цього виконавця?</value>
  </data>
  <data name="DeleteSong" xml:space="preserve">
    <value>Видалити Пісню</value>
  </data>
  <data name="DeleteUsConfirm" xml:space="preserve">
    <value>Ви впевнені, що хочете видалити цього користувача?</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Видалати користувача</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Змінити</value>
  </data>
  <data name="EditGenre" xml:space="preserve">
    <value>Змінити Жанр</value>
  </data>
  <data name="EditSinger" xml:space="preserve">
    <value>Змінити Виконавця</value>
  </data>
  <data name="EditSong" xml:space="preserve">
    <value>Змінити Пісню</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Змінити Користувача</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Електронна пошта</value>
  </data>
  <data name="EmailAlreadyInUse" xml:space="preserve">
    <value>Електронна пошта вже використовується</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Вихід</value>
  </data>
  <data name="FildRequired" xml:space="preserve">
    <value>Поле має бути заповнено</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Фільтрувати</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Ім'я</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Жанр</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>Жанри</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Привіт</value>
  </data>
  <data name="IncorrectEmail" xml:space="preserve">
    <value>Електронна пошта не коректна</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Прізвище</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Логін</value>
  </data>
  <data name="LoginTaken" xml:space="preserve">
    <value>Цей логін вже зайнятий!</value>
  </data>
  <data name="Logon" xml:space="preserve">
    <value>Увійти</value>
  </data>
  <data name="MusicPortal" xml:space="preserve">
    <value>Музичний портал</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Назва</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Пароль</value>
  </data>
  <data name="PasswordConfirm" xml:space="preserve">
    <value>Підтвердження паролю</value>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>Паролі не співпадають!</value>
  </data>
  <data name="PathToFile" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Зареєструватися</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Реєстрація</value>
  </data>
  <data name="RegNotPossibLogAdm" xml:space="preserve">
    <value>Неможливо зареєструватися під логіном admin!</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Зберігти</value>
  </data>
  <data name="SearchSong" xml:space="preserve">
    <value>Шукати пісню</value>
  </data>
  <data name="Singer" xml:space="preserve">
    <value>Виконавець</value>
  </data>
  <data name="Singers" xml:space="preserve">
    <value>Виконавці</value>
  </data>
  <data name="Song" xml:space="preserve">
    <value>Пісня</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Назва</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Користувачі</value>
  </data>
  <data name="WrongLogin" xml:space="preserve">
    <value>Невірний логін або пароль!</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Рік</value>
  </data>
</root>